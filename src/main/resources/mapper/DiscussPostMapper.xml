<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlut.community.dao.DiscussPostMapper">

    <sql id="selectField">
        id, user_id, title, content, type, status, create_time, comment_count, score
    </sql>

    <sql id="insertField">
        user_id, title, content, type, status, create_time, comment_count, score
    </sql>


    <!--虽然返回值是List但resultType写DiscussPost就行了，因为List是Java自己的方法能自动解析出来-->
    <select id="selectDiscussPost" resultType="DiscussPost">
        select <include refid="selectField"></include>
        from discuss_post
        where status != 2 -- 状态为2是拉黑，不应该显示
        <if test="userId != 0"> -- test里的userId指的是传过来的参数名
            and user_id = #{userId}
        </if>
        <if test="orderMode==0">
            order by type desc, create_time desc -- 按类型和时间倒叙排序，使最新置顶帖子在前
        </if>
        <if test="orderMode==1">
            order by type desc, score desc, create_time desc -- 按类型和热度倒序排序
        </if>
        limit #{offset}, #{limit}; -- 分页显示
    </select>

    <select id="selectDiscussPostRows" resultType="java.lang.Integer">
        select count(id)
        from discuss_post
        where status != 2 -- 状态为2是拉黑，不应该显示
        <if test="userId != 0"> -- test里的userId指的是传过来的参数名
            and user_id = #{userId};
        </if>
    </select>

    <insert id="insertDiscussPost" parameterType="DiscussPost" keyProperty="id">
        insert into discuss_post (<include refid="insertField"></include>)
        values (#{userId}, #{title}, #{content}, #{type}, #{status}, #{createTime}, #{commentCount}, #{score});
    </insert>

    <select id="selectDiscussPostById" resultType="com.dlut.community.pojo.DiscussPost">
        select <include refid="selectField"></include>
        from discuss_post
        where id = #{id};
    </select>

    <update id="updateCommentCount"> -- 普通的数据类型不用声明传过来的参数
        update discuss_post set comment_count = #{commentCount} where id = #{id};
    </update>

    <update id="updateType">
        update discuss_post set type = #{type} where id = #{id};
    </update>
    <update id="updateStatus">
        update discuss_post set status = #{status} where id = #{id};
    </update>
    <update id="updateScore">
        update discuss_post set score = #{score} where id = #{id};
    </update>
</mapper>